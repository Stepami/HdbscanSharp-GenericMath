Assembly Puzzle - Binary Bomb Lab, Phase 5
so I'm in Computer Systems right now and we are doing the infamous Bomb Lab. I have made it up to phase 5 and I am kind of stuck So far I have figured out the input should be three integers, separated by spaces. The assembly code I have is   0x000000000040114b <+0>: push %rbp 0x000000000040114c <+1>: mov %rsp,%rbp 0x000000000040114f <+4>: sub $0x10,%rsp 0x0000000000401153 <+8>: lea -0x4(%rbp),%r8 0x0000000000401157 <+12>: lea -0x8(%rbp),%rcx 0x000000000040115b <+16>: lea -0xc(%rbp),%rdx 0x000000000040115f <+20>: mov $0x402a4a,%esi 0x0000000000401164 <+25>: mov $0x0,%eax 0x0000000000401169 <+30>: callq 0x400cb0 <__isoc99_sscanf@plt> 0x000000000040116e <+35>: cmp $0x2,%eax 0x0000000000401171 <+38>: jg 0x401178  0x0000000000401173 <+40>: callq 0x4016d5  0x0000000000401178 <+45>: mov -0xc(%rbp),%eax 0x000000000040117b <+48>: and $0xf,%eax 0x000000000040117e <+51>: mov %eax,-0xc(%rbp) 0x0000000000401181 <+54>: mov $0xc,%edx 0x0000000000401186 <+59>: mov $0x0,%ecx 0x000000000040118b <+64>: add %eax,%ecx 0x000000000040118d <+66>: cltq 0x000000000040118f <+68>: mov 0x4027c0(,%rax,4),%eax 0x0000000000401196 <+75>: sub $0x1,%edx 0x0000000000401199 <+78>: jne 0x40118b  ---Type  to continue, or q  to quit--- 0x000000000040119b <+80>: cmp -0x8(%rbp),%eax 0x000000000040119e <+83>: jne 0x4011a5  0x00000000004011a0 <+85>: cmp -0x4(%rbp),%ecx 0x00000000004011a3 <+88>: je 0x4011aa  0x00000000004011a5 <+90>: callq 0x4016d5  0x00000000004011aa <+95>: leaveq 0x00000000004011ab <+96>: retq          I determined that I need three integers after i did   x/s 0x402a4a  and it gave me "%d %d %d". I did   (gdb) x/16dw 0x4027c0 0x4027c0 : 15 14 11 5 0x4027d0 : 8 0 13 9 0x4027e0 : 3 6 12 2 0x4027f0 : 4 10 7 1      I know that there is a loop from lines +64 to +78, it runs 12 times. each time it is running, it adds 15 to %ecx, and saves %ecx a that, so at the end of the loop, %ecx should equal 180. %edx acts as a counter and ever time the loop is run, it subtracts 1 from it until it is 0, making it exit the loop. Upon exiting the loop, it should compare %eax, which I think should be 15, however it keeps jumping to explode bomb. After that comparison, there is another to %ecx, which I think should be 180. This is where I am stuck, I keep exploding at the first comparison, and I'm unsure what to do next.  submitted by /u/MadieMavs [link] [comments] 