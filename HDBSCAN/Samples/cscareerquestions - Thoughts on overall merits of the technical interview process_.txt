Thoughts on overall merits of the technical interview process?
The views on it are fairly diverse and I frankly could never find any one place that shares a standard view of it. I'm curious what the spread of opinions around these parts is; I've noticed that this sub in particular tends to be a wee bit more critical with regards to that process than most. And to be clear, by "technical interview" I mean the whole process of asking individuals a series of questions about the fundamentals of CS, algorithms, or coding on the whiteboard. My own opinion? It's not a good way to recruit and one I think should never be used. Endless false positives, false negatives, and poor correlation between merit as an employee and technical interview performance. For mid-level/senior-level professionals, the reason should be fairly obvious; algorithms learned back in college play a very small role in their overall job and while they absolutely know enough to know when and how they should go back and learn an algorithm or set of algorithms as needed, it is a pointless exercise to have them try to regurgitate low-level tasks as if they took that class just a little while ago. Like this. For entry-level professionals, it's just as bad although not for as obvious of reasons. It really serves as little more than a pop quiz of whatever information you might have been expected to learn over the past four years. Any range of awkwardness of questions being asked or being unable to recall within a small period of time and no resources to reference a specific "clever" solution to a problem is the most common thing in the world but also likely to disqualify you from employment for that specific position. Worst of all though, is that it seems to devalue any form of experience. Any interview or interaction I've ever had with Big X companies (make X as small or large as you like and the number will still be fairly valid), has gone something like this: "Tell me about yourself and what you've done." "I've worked on so-and-so project, accomplished so-and-so in the process." "Ok I don't really care, here's our little puzzle for you to solve and if you can do it you'll get a job." And in that situation, being able to solve their little puzzle, often by studying the exact kinds of questions they ask (I've even seen websites that have full lists of the questions they tend to ask, or seen lazy entry-level engineer interviewers that just rip from CTCI because that's all they know how to do), matters more than actually having a history of being productive. I've seen it too often justified as a necessary screening check to get rid of all those people that "can't code at all" even though they have a degree - or because of not having one at all. But anecdotally I see little to no truth to this. The places I've worked where it's always purely behavioral/resume interviews tend to have programmers suited to the task and to the market rate that they are offered, and rarely is there a blatant lack of coding prowess that is holding them back. And I haven't seen any particular overwhelming concentration of talented programmers at "technical interview" firms either. In all cases the people that seem to do the best work are the people who do the best work. There's not really any very simple pattern to establish here. Couple that with the fact that one of the best technical interviewers I ever knew is this guy who is a serial liar (with fake references for every job) who gets fired every few months for incompetence and goes and finds a new job pretty much instantly because he can solve a few coding puzzles, and I wonder if there is any merit at all to using it as a filter. Frankly, the only factors I can say that are most strongly associated with technical interview prowess are an attraction to competitive coding (leetcode, hackerrank, etc), male youth, and techbro personalities. Most other factors seem to be almost incidental and while most people like to say they've never had bad experiences with a hire they screened through the technical interview process, I really start to wonder if it's causal or even true. I have certainly seen nothing of the sort myself. Knowing that lots of people see it lots of different ways, I'm interested in seeing what the rest of you have to say about it all.  submitted by /u/TheNegachin [link] [comments] 