What's the stance on using the "metaprogramming" stuff (such as Reflection)? When is it considered like dirty code? When is it not?
For example I just wrote some code to retrieve all type inheriting from an abstract class with  private static IEnumerable commandList = typeof(Command).Assembly.GetTypes(). Where(type => type.IsSubclassOf(typeof(Command))). Select(t => (Command)Activator.CreateInstance(t));   rather than manually creating a list of "new SubCommand()" for all subcommands I wrote. I haven't found another way to do this by just using "regular" code. Maybe it's because my design is not so good, but maybe my design is actually ok and using this kind of code is ok too (?). Does it feel "hacky" to you? Do you often use metaprogramming code in production? What are some good and bad examples?  submitted by /u/Valiox [link] [comments] 