Trying to build a basic traffic light using a Data Model and State Machine* HELP
Hello, I am having trouble coding a traffic light with a data model and an FSM. I have a majority of my code in place but the traffic light stays green when it is running. I think I'm having trouble with the time.deltaTime, but I'm really unsure. Here is my code. Data Model using System.Collections; using System.Collections.Generic; using UnityEngine; public class TrafficLight : MonoBehaviour {  [SerializeField] private float greenTrafficLight = 5.0f; [SerializeField] private float yellowTrafficLight = 5.0f; [SerializeField] private float redTrafficLight = 5.0f; public GameObject greenLightObj; public GameObject yellowLightObj; public GameObject redLightObj; private float timeElapsed; // Use this for initialization void Start () { ResetTimeSinceLastRestart(); GetComponent().material.color = Color.gray; greenLightObj.GetComponent().material.color = Color.gray; yellowLightObj.GetComponent().material.color = Color.gray; redLightObj.GetComponent().material.color = Color.gray; } // Update is called once per frame void Update () { timeElapsed += Time.deltaTime; } public float GetTime() { return timeElapsed; } public void ResetTimeSinceLastRestart() { timeElapsed = 5.0f; } public float GetRedTime() { return redTrafficLight; } public float GetYellowTime() { return yellowTrafficLight; } public float GetGreenTime() { return greenTrafficLight; }      } State Machine using System.Collections; using System.Collections.Generic; using UnityEngine; using System; public class TrafficLightStateMachine : MonoBehaviour {  private TrafficLight trafficLight; private TrafficLightStates curState = TrafficLightStates.redLight; private Dictionary fsm = new Dictionary(); // Use this for initialization void Start() { trafficLight = GetComponent(); fsm.Add(TrafficLightStates.greenLight, new Action(GreenTrafficState)); fsm.Add(TrafficLightStates.yellowLight, new Action(YellowTrafficState)); fsm.Add(TrafficLightStates.redLight, new Action(RedTrafficState)); SetState(TrafficLightStates.redLight); } // Update is called once per frame void Update() { fsm[curState].Invoke(); } enum TrafficLightStates { greenLight, yellowLight, redLight, } void GreenTrafficState() { if (trafficLight.GetRedTime() > trafficLight.GetGreenTime()) { trafficLight.yellowLightObj = GameObject.Find("Yellow Light"); trafficLight.yellowLightObj.GetComponent().material.color = Color.yellow; SetState(TrafficLightStates.yellowLight); } } void YellowTrafficState() { if (trafficLight.GetGreenTime() > trafficLight.GetYellowTime()) { trafficLight.redLightObj = GameObject.Find("Red Light"); trafficLight.redLightObj.GetComponent().material.color = Color.red; SetState(TrafficLightStates.redLight); } } void RedTrafficState() { if (trafficLight.GetYellowTime() >= trafficLight.GetRedTime()) { trafficLight.greenLightObj = GameObject.Find("Green Light"); trafficLight.greenLightObj.GetComponent().material.color = Color.green; SetState(TrafficLightStates.greenLight); } }        void SetState(TrafficLightStates newState) { curState = newState; } }  submitted by /u/theOtherGuy_5 [link] [comments] 