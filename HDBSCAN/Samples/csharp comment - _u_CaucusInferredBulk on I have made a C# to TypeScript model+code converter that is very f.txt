/u/CaucusInferredBulk on I have made a C# to TypeScript model+code converter that is very flexible and runs from JavaScript (so Gulp/Grunt)
I would suggest an option to create both interfaces and classes. Because the initialization and typecasting syntax/behaviors are not identical for classes and interfaces, sometimes you actually need the class. A prime use case for this is testing : I want to instantiate an object of type X but only populate a small subset of properties. the <> syntax will not let you do that because it will claim the shape of the JSON does not meet the interface. But with a class you can just instantiate and populate the 2 fields you care about.   