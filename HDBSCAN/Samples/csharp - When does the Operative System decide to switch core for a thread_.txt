When does the Operative System decide to switch core for a thread?
Some time ago I noticed that the execution of the main thread of my application was jumping between cores. Talking about games, is possible that in order to wait for the GPU to complete its operations or wait for the vertical sync, the main thread sleeps which allows the OS to restart it on another core. Since then I didn't have the time to investigate further. I am not a multi-thread expert, but I need to understand more about it. So, can you please tell me which instructions could let the OS switch core for a thread and if I can rely on this mechanism regardless the operative system? Currently I tend to kill pooled threads as often as possible to be sure the OS will decide the best core to run them, but some times I would like to execute loops that lives for the whole duration of the application, which is not recommended when we talk about threads returned by the ThreadPool. If the OS would change the thread core during its execution, then I wouldn't be worried about it running on cores that could not be optimal.  submitted by /u/sebasjammer [link] [comments] 