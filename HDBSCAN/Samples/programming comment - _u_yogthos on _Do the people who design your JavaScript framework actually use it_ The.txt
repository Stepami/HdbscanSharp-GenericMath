/u/yogthos on "Do the people who design your JavaScript framework actually use it? The answer for Angular 1 and 2 is no. This is really important."
If you're considering everything I would recommend looking outside Js as well. My team has been using Reagent for over 2 years, and we simply wouldn't go back to Js. ClojureScript is a much cleaner language, without all the quirks and gotchas present in JavaScript. It's immutable by default, and has a large standard library for data manipulation akin to underscore.js. I find that immutability plays a huge role in writing large applications because it allows you to safely do local reasoning about individual parts of the application. Even though Reagent based on React it can be faster than React thanks to cheaper diffing of immutable data structures. It has great interop with plain Js, so you can use any JavaScript libraries. You get live code reloading without having to reload the page and rebuild the state every time you make a change. Tooling is much cleaner in my opinion, Leiningen takes care of dependencies, building, testing, and packaging apps. You typically have to juggle multiple Js tools to do the same thing.  I recently taught a workshop for JavaScript devs, and you can work through the project to get a feel of what the development workflow feels like.   