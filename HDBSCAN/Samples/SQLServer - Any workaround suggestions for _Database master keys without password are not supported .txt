Any workaround suggestions for :"Database master keys without password are not supported in this version of SQL Server"
There is this known issue where a bacpac exported from an Azure SQL Database cannot be imported into an on-prem version of SQL Server: https://blogs.msdn.microsoft.com/azuresqldbsupport/2017/03/30/exported-database-from-azure-sql-failed-to-be-imported-to-azure-sql-or-to-local-sql-server/ When I try to do it, I get the following errors: Could not import package. Warning SQL72012: The object [MyDb_Data] exists in the target, but it will not be dropped even though you selected the 'Generate drop statements for objects that are in the target database but that are not in the source' check box. Warning SQL72012: The object [MyDb_Log] exists in the target, but it will not be dropped even though you selected the 'Generate drop statements for objects that are in the target database but that are not in the source' check box. Error SQL72014: .Net SqlClient Data Provider: Msg 33161, Level 15, State 1, Line 1 Database master keys without password are not supported in this version of SQL Server. Error SQL72045: Script execution error. The executed script: CREATE MASTER KEY;  I am running: SQL 2016 Developer, compatibility_level = 130, Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=SIMPLE, Version=852, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsAutoCreateStatistics, IsAutoUpdateStatistics  The post linked above notes 3 workarounds - I have tried the first two and neither work (not sure how to do #3): Option 1 to mitigate import to Azure SQL DB use the import from the Azure portal. to mitigate import to local SQL Server installation you can alter the existing master key and add password encryption to it. this should be done before you export the database ALTER MASTER KEY ADD ENCRYPTION BY PASSWORD = ''; Option 2  for short term mitigation we provide you PowerShell script that do the following: remove the master key object from the bacpac remove the credential object from the bacpac after running this PS script on the bacpac you will have new bacpac file with "patched" suffix. download it here example: C:\PS> .\RemoveMasterKey.ps1 -bacpacPath "C:\BacPacs\Test.bacpac" Option 3 (Added 2017-08-17) you can manually modify the content of the .bacpac file. here is a great article that describes how to do it.  The thing that confuses me the most is how the "alter the existing master key and add password encryption to it. this should be done before you export the database" approach is failing. If I do that in the SQL Azure DB, then backup a bacpac to blob storage, download that bacpac to on-prem and restore into my MSSQL instance, why is it still giving me this same error? Any ideas?  submitted by /u/xt11111 [link] [comments] 