Is it possible to pass a variable to an existing thread without sticking that thread in a tight loop?
So I have been playing with NamedPipes (royal pain in my ass) and have come to the conclusion that a pipe cannot both send and receive simultaneously on the same thread, but you CAN do so if you've got the both of them on separate threads. The difficulty is in when the application needs to respond to incoming information in order to send a response. The incoming info COULD theoretically be parsed and thrown immediately into its own thread, but with all the thread create/teardown it would be a good deal of overhead. Then there's the idea that you could stick the "sender" thread in a tight loop where it monitors changes to a shared list of messages "to be sent" but this adds either 1.) A thread that peggs out one of the processors unnecessarily, or 2.) A thread that has a "sleep" that unnecessarily slows down the communications. So I'm wondering, is it even POSSIBLE to "jump threads" with your execution. Basically for the "ReadData" method to call the "SendData" method on a different thread, but without creating an entirely new thread each time?  submitted by /u/Javin007 [link] [comments] 