What's with all the importing in Modern JS?
So, I'm most familiar with Ruby on Rails as a web framework. In Rails, as you add models and controllers, the server includes them and one file can freely reference another as it pleases. But in modern javascript frameworks, each file needs to import the files it depends on, and it can get to be quite a bit of text. Here's an example in the official Angular tutorial. To get everything working, a base-level module needs to import a bunch of components, and then creates a singleton object that imports/exports. It's like 30 lines that basically say "use the files in my project." Components themselves also make use of importing and exporting, though not quite as much as the base files, from what I understand of them. So, this isn't the way that Rails works, but this seems to be a best practice that all of the leading JS frameworks have adopted. Is this just a technical necessity, or is there some advantage to all the importing that I don't understand, yet?  submitted by /u/aust1nz [link] [comments] 