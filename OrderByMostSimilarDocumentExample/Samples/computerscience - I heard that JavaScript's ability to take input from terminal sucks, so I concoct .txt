I heard that JavaScript's ability to take input from terminal sucks, so I concoct a solution.
JavaScript is unable to take input from terminal efficiently? I've got my own back (duh). Here are the bottom lines of my JavaScript code:  const nightmareMatrix = new gaussianMatrix([[0, 0], [0, 0]], [0, 0]); if (nightmareMatrix.mat.every(row => row.every(col => col === 0)) && nightmareMatrix.consts.every(row => row === 0)) { throw("Do not run this JavaScript file directly. Read the documentation on how to use this program."); } // Convert equations to slope-intercept form console.log("Slope-intercept"); nightmareMatrix.mat.forEach((row, i) => { console.log("Equation " + (i+1) + "\ty = " + row[0] / -(row[1]) + "x + " + -(nightmareMatrix.consts[i] / -(row[1]))); }); // Solve system for a real solution console.log("\nSolution"); const sols = gauss(nightmareMatrix.mat, nightmareMatrix.consts); sols.forEach((sol, i) => { i === 0 ? console.log("x = " + sol) : console.log("y = " + sol); });  I know that the values to initialize the gaussianMatrix instance needs to be changed. So, I turned to some shell scripting:  echo "Enter the first equation of the system." printf "a? " read eq1a printf "b? " read eq1b printf "c? " read eq1c echo "Enter the second equation of the system." printf "a? " read eq2a printf "b? " read eq2b printf "c? " read eq2c echo magicregex="^const nightmareMatrix" sed "/${magicregex}/s/[0-9]\\+/${eq1a}/1; /${magicregex}/s/[0-9]\\+/${eq1b}/2; /${magicregex}/s/[0-9]\\+/${eq2a}/3; /${magicregex}/s/[0-9]\\+/${eq2b}/4; /${magicregex}/s/[0-9]\\+/${eq1c}/5; /${magicregex}/s/[0-9]\\+/${eq2c}/6" main.js | node  So, using shell script: We inquire input from the user from the comfort of their terminals. We literally just fucking edit the JavaScript code in the correct place. We pipe the edited code to Node REPL to run. We get output.  Sorry about bragging, but this is literally me bragging. Anyway, I made this because I was pissed about how frequently these exercises come up in my schoolwork, and so I decided to just implement an algorithm and give it a nice interface.  submitted by /u/suttiwit [link] [comments] 