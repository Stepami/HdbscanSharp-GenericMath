Troubleshooting legacy systems; at what point do you charge consultation fees?
The backstory: I've helped a handful of clients migrate off a legacy PHP CMS, which was created ~10 years ago and sold by a local developer to a few businesses in the area. Said developer doesn't support this platform anymore, and it's basically just one big SQL injection. A true rootkit with a page builder feature. The transitioning jobs were all paid of course, but every now and then I get an email from a fellow web developer that is now dealing with a customer using the same ancient system, and they received my email through the client grapevine. Their issues usually come down to them having moved the old CMS to a new host and nothing working, which is due to silly things like split or mysql being deprecated in non-ancient PHP versions, or GoDaddy-specific issues of session caching or shared hosting limitations. I'll offer a few suggestions on what to try, but generally don't spend too much time on it. I received another email yesterday that turned into hours of them forwarding one issue after the other to me (all fixable), but I feel like I should be paid to deal with this since it's turned into a full-blown consultation on what files to edit, how to edit them and what changes to apply. My Question: How do you transition from a quick "helping out" to "you really need to start paying me for my time" in this situation? Do you bounce back even simple initial questions with a "my consultation fee is (X), here's my PayPal" or do you generally try to help someone seeking a hand in a courteous manner first? I'm not sure where the fine line between "being rude" and "valuing your time" lies for most people in this regard. Thank you for your feedback / insight!  submitted by /u/cawfee [link] [comments] 