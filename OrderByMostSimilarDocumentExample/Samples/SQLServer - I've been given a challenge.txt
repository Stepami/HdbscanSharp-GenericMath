I've been given a challenge
Hi All, this is my first post here and I'm looking for a little help. I come from a OOP .net background and I've been set a challenge in SQL, the first part is below. I'm fairly familiar with tSQL but the challenge seems to be set heavily around optimization and SETs - I unfortunately have no experience of either. Firstly I was hoping someone could either point me in the direction of a good tutorial that describes how to use SETs correctly - I understand it requires slightly different type of thinking that if you were to tackle the problem from a procedural point of view? Secondly, any general tips on the subject would be welcome. Do's and Don'ts, common mistakes, best practices etc. Thanks in advance everyone! The Challenge: Part 1 Create a table with 2 columns, e.g.: CREATE TABLE T_INT_SETS ( SET_ID VARCHAR2(12) NOT NULL ENABLE , INT_VALUE INT NOT NULL ENABLE ); Populate this table with values, according to these rules: SET_ID groups/defines a set of integer values. The size of each set is variable, and can range from 10 to 500 integer values. The number of sets is unknown, but could be 100's of thousands. Each individual set contains a unique set of integer values - this means that each row with a SET_ID and INT_VALUE together is a unique combination in the entire table. Ensure that some of the integer sets will contain the same integer values as other sets. These are duplicate sets. Ensure some sets are subsets of other (larger) integer sets. These are redundant subsets. Populate the table with at least 1 million rows, containing at least 10 thousand random integer sets.  Part 2 Remove all duplicated sets sets and redundant subsets from the table. You are not allowed to use specific knowledge about how the data was created/generated to remove these sets.  submitted by /u/The_Turtle_Bear [link] [comments] 