Why is Path.GetInvalidPathChars missing some invalid characters?
I noticed something weird while trying to filter out invalid path names in my console app (running on Windows 10): When targeting .NET Core 2.0, Path.GetInvalidPathChars is only returning |, whitespace, and a bunch of control characters, but none of the following: " * < > : ? When targeting .NET Framework 4.6.1, it's a little better, but still doesn't return: : * ? Bizarrely, Path.GetInvalidFileNameChars returns all the above invalid characters (plus slash and backslash), as expected, when targeting either Framework or Core. What's going on? Test code (filters out whitespace & control characters):  class Program { static void Main(string[] args) { System.Console.WriteLine("Invalid file name chars: " + GetInvalidChars(System.IO.Path.GetInvalidFileNameChars())); System.Console.WriteLine("Invalid path chars: " + GetInvalidChars(System.IO.Path.GetInvalidPathChars())); System.Console.ReadLine(); } static string GetInvalidChars(char[] badChars) { var invalid = new System.Text.StringBuilder(); for (int i = 0; i < badChars.Length; i++) { if (!System.Char.IsControl(badChars[i]) && !System.Char.IsWhiteSpace(badChars[i])) { invalid.Append(badChars[i]); invalid.Append(" "); } } invalid.Remove(invalid.Length - 1, 1); return invalid.ToString(); } }   submitted by /u/Zapafaz [link] [comments] 